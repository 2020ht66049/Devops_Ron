# To be discuss: Package manager

Homework:
https://developer.hashicorp.com/packer/tutorials/aws-get-started?product_intent=packer

#./mvnw clean package -DskipTests
Waiting for resource to join


Today's Agenda:
===============
Host Deployment, JIRA, Packer, Maven and Golden image.

Lets start with example. Lets say I have pets/plants, and I am going for 10 days vacation, so I need someone who can take of my pets.
People decided to have one application called "Spring pet clinic" which take care of plants and pets

Plan  Code   Build  Test
Release Deploy Operate Monitor


To execute this road map, we hire developer, and lets say developer has deliver the code

Link for spring pet clinic: https://github.com/spring-projects/spring-petclinic

Now, Here developer will specify how to deploy this application

git clone https://github.com/spring-projects/spring-petclinic.git
cd spring-petclinic
./mvnw package
java -jar target/*.jar

Requirement: it should work just as well with Java 17 or newer

To deploy this application my build engineers needs to start executing these steps 1 by 1.

sudo su - > This command make me root user in the server, so I can do any activity.

ubuntu@ip-172-31-22-215:~$ sudo su -
root@ip-172-31-22-215:~#

Now, lets install java.
to check java is alredy installed or not > java --version
root@ip-172-31-22-215:~# java --version
Command 'java' not found, but can be installed with:
apt install openjdk-11-jre-headless  # version 11.0.18+10-0ubuntu1~22.04, or
apt install default-jre              # version 2:1.11-72build2
apt install openjdk-17-jre-headless  # version 17.0.6+10-0ubuntu1~22.04
apt install openjdk-18-jre-headless  # version 18.0.2+9-2~22.04
apt install openjdk-19-jre-headless  # version 19.0.2+7-0ubuntu3~22.04
apt install openjdk-8-jre-headless   # version 8u362-ga-0ubuntu1~22.04


Command to install java17
apt-get update
apt install openjdk-17-jre-headless -y

root@ip-172-31-22-215:~# java --version
openjdk 17.0.8.1 2023-08-24
OpenJDK Runtime Environment (build 17.0.8.1+1-Ubuntu-0ubuntu122.04)
OpenJDK 64-Bit Server VM (build 17.0.8.1+1-Ubuntu-0ubuntu122.04, mixed mode, sharing)

Host deployment: Running the steps given by developer to run the application.

Now lets see the problem with host deployment.
=============================================

Here to provision[Making required changes in server] it takes appoximately 5 minutes. so if I scaleup and scaledown the application, my server would be avaialble after 5 minutes.

Example: you are shopping in amazon, and amazon is very slow because of higher traffice, they need to add new server. to solev this delay we have a good solution called golden image.

Golden image is image that has all the software preinstalled that we require for our application

My requirement is: I need a golden image that has java and docker installed
apt-get update
apt install openjdk-17-jre-headless -y

apt-get update
apt install docker.io

Packer: Packer is tool by which we create golden image(https://www.packer.io/)
======

It's basically a part where you define how you can provision the server

    "provisioners":[
        {
            "type": "shell",
            "inline": [
                "sudo yum install httpd -y",
                "apt install openjdk-17-jre-headless -y"]
          }
    ]


JIRA: Jisa is use for communication and issue tracking. so here, we would be creating ticket, and everyone can track it.
====

IN Jira primarily we have following ticket

BUG
Support
Story: Collection of task and subtask
task
subtask
EPIC: big story[creating spring pet clinic project]

Maven
=====
Plan code build test
release deploy operate monitor

Plan[JIRA]

Codding[ASTK]

Build + Test + release + deploy + Monitor

Ron, please do testing: you would be exeuting couple of linux command
               release: you would be exeuting couple of linux command
               Build : you would be exeuting couple of linux command


Maven is a tool that provide simple way to do all above task.


lets install maven, and see.

Maven installation
==================
1) apt-get update
2) apt install maven

How to check maven version:
===========================
mvn -v

root@ip-172-31-18-49:~# mvn -v
Apache Maven 3.6.3
Maven home: /usr/share/maven
Java version: 11.0.20.1, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64
Default locale: en, platform encoding: UTF-8
OS name: "linux", version: "5.19.0-1025-aws", arch: "amd64", family: "unix"

Maven goal:
    validate: check if all information necessary for the build is available
    compile: compile the source code
    test-compile: compile the test source code
    test: run unit tests
    package: package compiled source code into the distributable format (jar, war, â€¦)
    integration-test: process and deploy the package if needed to run integration tests
    install: install the package to a local repository
    deploy: copy the package to the remote repository

mvn <goal>


git clone https://github.com/spring-projects/spring-petclinic.git
cd spring-petclinic

Packaging
=========

PetClinicApplication.java > PetClinicApplication.class
PetClinicRuntimeHints.java > PetClinicRuntimeHints.class

Comibining all the class file PetClinicApplication.class + PetClinicRuntimeHints.class

jarfile: jarfile is a coolection of .class[compiled java file] file
mnv compile

result.jar


I will create a video, and I will expalain their how to install all the devops tool[2 hrs]

Install K8s: 20-30 minutes

